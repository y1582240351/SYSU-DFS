# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import DataNode.dataNode_pb2 as dataNode__pb2


class dataNodeStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.deleteFile = channel.unary_unary(
                '/dataNode.dataNode/deleteFile',
                request_serializer=dataNode__pb2.ClientDeleteRequest.SerializeToString,
                response_deserializer=dataNode__pb2.ClientRespond.FromString,
                )
        self.read = channel.unary_stream(
                '/dataNode.dataNode/read',
                request_serializer=dataNode__pb2.ClientReadRequest.SerializeToString,
                response_deserializer=dataNode__pb2.Chunk.FromString,
                )
        self.write = channel.stream_unary(
                '/dataNode.dataNode/write',
                request_serializer=dataNode__pb2.ClientWriteRequest.SerializeToString,
                response_deserializer=dataNode__pb2.ClientRespond.FromString,
                )
        self.create = channel.unary_unary(
                '/dataNode.dataNode/create',
                request_serializer=dataNode__pb2.ClientCreateRequest.SerializeToString,
                response_deserializer=dataNode__pb2.ClientRespond.FromString,
                )
        self.syncWrite = channel.unary_unary(
                '/dataNode.dataNode/syncWrite',
                request_serializer=dataNode__pb2.ClientSyncRequest.SerializeToString,
                response_deserializer=dataNode__pb2.ClientRespond.FromString,
                )


class dataNodeServicer(object):
    """Missing associated documentation comment in .proto file."""

    def deleteFile(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def read(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def write(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def create(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def syncWrite(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_dataNodeServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'deleteFile': grpc.unary_unary_rpc_method_handler(
                    servicer.deleteFile,
                    request_deserializer=dataNode__pb2.ClientDeleteRequest.FromString,
                    response_serializer=dataNode__pb2.ClientRespond.SerializeToString,
            ),
            'read': grpc.unary_stream_rpc_method_handler(
                    servicer.read,
                    request_deserializer=dataNode__pb2.ClientReadRequest.FromString,
                    response_serializer=dataNode__pb2.Chunk.SerializeToString,
            ),
            'write': grpc.stream_unary_rpc_method_handler(
                    servicer.write,
                    request_deserializer=dataNode__pb2.ClientWriteRequest.FromString,
                    response_serializer=dataNode__pb2.ClientRespond.SerializeToString,
            ),
            'create': grpc.unary_unary_rpc_method_handler(
                    servicer.create,
                    request_deserializer=dataNode__pb2.ClientCreateRequest.FromString,
                    response_serializer=dataNode__pb2.ClientRespond.SerializeToString,
            ),
            'syncWrite': grpc.unary_unary_rpc_method_handler(
                    servicer.syncWrite,
                    request_deserializer=dataNode__pb2.ClientSyncRequest.FromString,
                    response_serializer=dataNode__pb2.ClientRespond.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'dataNode.dataNode', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class dataNode(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def deleteFile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/dataNode.dataNode/deleteFile',
            dataNode__pb2.ClientDeleteRequest.SerializeToString,
            dataNode__pb2.ClientRespond.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def read(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/dataNode.dataNode/read',
            dataNode__pb2.ClientReadRequest.SerializeToString,
            dataNode__pb2.Chunk.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def write(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_unary(request_iterator, target, '/dataNode.dataNode/write',
            dataNode__pb2.ClientWriteRequest.SerializeToString,
            dataNode__pb2.ClientRespond.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def create(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/dataNode.dataNode/create',
            dataNode__pb2.ClientCreateRequest.SerializeToString,
            dataNode__pb2.ClientRespond.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def syncWrite(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/dataNode.dataNode/syncWrite',
            dataNode__pb2.ClientSyncRequest.SerializeToString,
            dataNode__pb2.ClientRespond.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
